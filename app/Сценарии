Я считаю активити, фрагменты и viewmodels в андройде контроллерами и отношусь к ним исключительно
как к контроллерам presentation слоя.
Таким образом навигация - смена или дополнительный вызов нового контроллера на вершину стека
--------------------------
Дано: 2 активити NavigationPerControllerFirst, NavigationPerControllerSecond
4 фрагмента - NA1Fragment1, NA1Fragment2, NA2Fragment1, NA2Fragment1
по 2 на каждую активность
наладить навигацию между активити и фрагментами
-1-
Вам нельзя использовать NavGraph(бегите)
-Скорее всего сразу же спросят в чем отличия лайф цикла между активити и фрагментом
вообще у фрагментов и активити tons of колбэков, но наверное самое ключевое это то
что у фрагментов есть метод onViewCreated, который больше всего нас интересует при разработке
потому что после его вызова мы готовы работать с View, которые содержит фрагмент
-В колбэке onCreate не получится поработать с View
- Еще одно важное отличие заключается в том, что фрагмент как контроллер - полностью управляется не ОС
а диспечером хостинга, то есть это не компонент приложения - это дополнительный контроллер к активити

-1.1-
Простой способ реализации навигации - не очень хороший вариант, т.к. фрагмент получается main контроллером,
в то время как активити толком ничего не контролирует, можно добавить гибкости
-1.2-
Способ чуть сложнее
Я люблю работать в парадигме MVI, поэтому этот метод будет реализован через event
-1.3-
Можно еще пойти по пути описания работы навигации в интерфейсе, затем сделать реализацию в активити,
но камон - по моему это конкретно так уменьшает гибкость, в то время как эвент и расширение
мы можем вполне спокойно расширять и дорабатывать
-2-
Вам можно использовать NavGraph - ну все примерно то же самое, только теперь мы будем расширять
NavController
//заметка
с помощью Channels вообще можно посылать навигационный эвент из viewModel, что на мой взгляд куда
кайфовее
сценарий -2- и навигацию из viewModel я уже делал множество раз